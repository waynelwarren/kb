sudo apt-get -y install build-essential autoconf libtool
sudo apt-get -y install libgflags-dev libgtest-dev
sudo apt-get -y install build-essential autoconf libtool
sudo apt-get -y install libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
sudo apt-get -y install cmake golang-go
sudo apt-get -y install clang libc++-dev
sudo apt-get -y install curl

mkdir ~/bin
mkdir ~/lib

cd ~/git
git clone https://github.com/facebook/rocksdb.git        
cd ~/git/rocksdb
make -j 4 static_lib                                     
sudo make install

cd ~/git
git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc
cd ~/git/grpc
git submodule update --init
make
cd third_party/protobuf
sudo make install
sudo cp grpc_cpp_plugin /usr/local/bin
cd ~/git/grpc/build
cp *.a /usr/local/lib

cd ~/git
git clone https://github.com/ndevilla/iniparser.git
cd ~git/iniparser
make

cd ~/git
wget -O ffmpeg-3.3.3.tar.bz2 http://ffmpeg.org/releases/ffmpeg-3.3.3.tar.bz2
tar -xf ffmpeg-3.3.3.tar.bz2
cd ffmpeg-3.3.3.tar
./configure
make
sudo make install

git clone https://github.com/apollovideo/frame_cache.git 
git clone https://github.com/apollovideo/chmm_server.git 

cd ~/git/chmm_server/src
mkdir /opt/chmm_server
make

cd ~/git
wget -O boost.tar.bz2 https://dl.bintray.com/boostorg/release/1.64.0/source/boost_1_64_0.tar.bz2
bzip2 -d boost.tar.bz2
tar xf boost.tar
cd boost_1_64_0
./bootstrap.sh
./b2
export BOOST_ROOT=/home/nvidia/git/boost_1_64_0
cp stage/lib/libboost_system.so.1.64.0 ~/lib
ln -s ~/lib/libboost_system.so.1.64.0 ~/lib/libboost_system.so
cp stage/lib/libboost_thread.so.1.64.0 ~/lib
ln -s ~/lib/libboost_thread.so.1.64.0 ~/lib/libboost_thread.so

cd ~/git/frame_cache/avt_assets_client
make

# alternate grpc build
cd ~/git
git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc
cd ~/git/grpc
git submodule update --init
cmake -DCMAKE_BUILD_TYPE=DEBUG .
make grpc++
make grpc++_unsecure
make grpc_unsecure
sudo make install
